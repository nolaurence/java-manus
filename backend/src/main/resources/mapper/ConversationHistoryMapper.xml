<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nolaurene.cms.dal.enhance.mapper.ConversationHistoryMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="cn.nolaurene.cms.dal.enhance.entity.ConversationHistoryDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="session_id" property="sessionId" jdbcType="VARCHAR"/>
        <result column="message_type" property="messageType" jdbcType="VARCHAR"
                typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="metadata" property="metadata" jdbcType="LONGVARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BOOLEAN"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, user_id, session_id, message_type, content, metadata, gmt_create, gmt_modified, is_deleted
    </sql>

    <!-- 插入对话历史 -->
    <insert id="insert" parameterType="cn.nolaurene.cms.dal.enhance.entity.ConversationHistoryDO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO conversation_history (
            user_id, session_id, message_type, content, metadata,
            gmt_create, gmt_modified, is_deleted
        ) VALUES (
                     #{userId}, #{sessionId}, #{messageType}, #{content}, #{metadata},
                     NOW(), NOW(), #{isDeleted}
                 )
    </insert>

    <!-- 批量插入对话历史 -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO conversation_history (
        user_id, session_id, message_type, content, metadata,
        gmt_create, gmt_modified, is_deleted
        ) VALUES
        <foreach collection="conversations" item="item" separator=",">
            (#{item.userId}, #{item.sessionId}, #{item.messageType}, #{item.content}, #{item.metadata},
            NOW(), NOW(), #{item.isDeleted})
        </foreach>
    </insert>

    <!-- 根据ID查询 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE id = #{id} AND is_deleted = FALSE
    </select>

    <!-- 根据用户ID查询对话历史 -->
    <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId} AND is_deleted = FALSE
        ORDER BY gmt_create DESC
    </select>

    <!-- 根据用户ID和会话ID查询对话历史 -->
    <select id="selectByUserIdAndSessionId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId} AND session_id = #{sessionId} AND is_deleted = FALSE
        ORDER BY gmt_create ASC
    </select>

    <!-- 根据会话ID查询对话历史 -->
    <select id="selectBySessionId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE session_id = #{sessionId} AND is_deleted = FALSE
        ORDER BY gmt_create ASC
    </select>

    <!-- 根据用户ID查询所有会话ID -->
    <select id="selectDistinctSessionIdsByUserId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT DISTINCT session_id
        FROM conversation_history
        WHERE user_id = #{userId} AND is_deleted = FALSE
        ORDER BY MAX(gmt_create) DESC
    </select>

    <!-- 根据用户ID和消息类型查询对话历史 -->
    <select id="selectByUserIdAndMessageType" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId} AND message_type = #{messageType} AND is_deleted = FALSE
        ORDER BY gmt_create DESC
    </select>

    <!-- 根据时间范围查询对话历史 -->
    <select id="selectByTimeRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE gmt_create BETWEEN #{startTime} AND #{endTime} AND is_deleted = FALSE
        ORDER BY gmt_create DESC
    </select>

    <!-- 根据用户ID和时间范围查询对话历史 -->
    <select id="selectByUserIdAndTimeRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId}
        AND gmt_create BETWEEN #{startTime} AND #{endTime}
        AND is_deleted = FALSE
        ORDER BY gmt_create DESC
    </select>

    <!-- 统计用户的对话数量 -->
    <select id="countByUserId" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM conversation_history
        WHERE user_id = #{userId} AND is_deleted = FALSE
    </select>

    <!-- 统计会话的消息数量 -->
    <select id="countBySessionId" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM conversation_history
        WHERE session_id = #{sessionId} AND is_deleted = FALSE
    </select>

    <!-- 根据内容关键词搜索对话历史 -->
    <select id="searchByContentKeyword" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId}
        AND content LIKE CONCAT('%', #{keyword}, '%')
        AND is_deleted = FALSE
        ORDER BY gmt_create DESC
    </select>

    <!-- 获取用户最近的对话历史 -->
    <select id="selectRecentByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE user_id = #{userId} AND is_deleted = FALSE
        ORDER BY gmt_create DESC
        LIMIT #{limit}
    </select>

    <!-- 获取会话的最后一条消息 -->
    <select id="selectLastMessageBySessionId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM conversation_history
        WHERE session_id = #{sessionId} AND is_deleted = FALSE
        ORDER BY gmt_create DESC
        LIMIT 1
    </select>

    <!-- 软删除指定会话的所有消息 -->
    <update id="softDeleteBySessionId">
        UPDATE conversation_history
        SET is_deleted = TRUE, gmt_modified = #{updateTime}
        WHERE session_id = #{sessionId}
    </update>

    <!-- 软删除用户的所有对话历史 -->
    <update id="softDeleteByUserId">
        UPDATE conversation_history
        SET is_deleted = TRUE, gmt_modified = #{updateTime}
        WHERE user_id = #{userId}
    </update>

    <!-- 物理删除指定时间之前的对话历史 -->
    <delete id="deleteByCreatedTimeBefore">
        DELETE FROM conversation_history
        WHERE gmt_create &lt; #{cutoffTime}
    </delete>

    <!-- 更新对话历史 -->
    <update id="update" parameterType="cn.nolaurene.cms.dal.enhance.entity.ConversationHistoryDO">
        UPDATE conversation_history
        SET content = #{content},
            metadata = #{metadata},
            gmt_modified = NOW()
        WHERE id = #{id}
    </update>

</mapper>